#!/bin/bash -e

RUN_DIR=/var/vcap/sys/run/garden
LOG_DIR=/var/vcap/sys/log/garden
PIDFILE=$RUN_DIR/garden.pid
DATA_DIR=/var/vcap/data/garden

mkdir -p /var/vcap/sys/log/monit
exec 1>> /var/vcap/sys/log/monit/garden.out.log
exec 2>> /var/vcap/sys/log/monit/garden.err.log

case $1 in

  start)
    if [ -f "$PIDFILE" ]; then
      pid=$(head -1 "$PIDFILE")

      if [ -n "$pid" ] && [ -e /proc/$pid ]; then
        echo "Garden is already running (pid: $pid); aborting."
        exit 1
      fi

      echo "Removing stale pidfile..."
      rm "$PIDFILE"
    fi

    mkdir -p $RUN_DIR
    mkdir -p $DATA_DIR
    mkdir -p $LOG_DIR

    echo $$ > /var/vcap/sys/run/garden/garden.pid

    export PATH=/var/vcap/packages/shadow/sbin:$PATH
    export PATH=/var/vcap/packages/iptables/sbin:$PATH

    mkdir -p /var/vcap/data/garden/depot

    <% if p("garden.destroy_containers_on_start") %>
    snapshots_path=""
    <% else %>
    snapshots_path=/var/vcap/data/garden/snapshots
    <% end %>

    exec /var/vcap/packages/garden-linux/bin/garden-linux \
      -depot=/var/vcap/data/garden/depot \
      -snapshots="${snapshots_path}" \
      -overlays=/var/vcap/data/garden/overlays \
      -graph=/var/vcap/data/garden/graph \
      -bin=/var/vcap/packages/garden-linux/src/github.com/cloudfoundry-incubator/garden-linux/old/linux_backend/bin \
      -mtu=<%= p("garden.network_mtu") %> \
      -disableQuotas=<%= !p("garden.disk_quota_enabled") %> \
      -listenNetwork=<%= p("garden.listen_network") %> \
      -listenAddr=<%= p("garden.listen_address") %> \
      -denyNetworks=<%= p("garden.deny_networks").join(",") %> \
      -allowNetworks=<%= p("garden.allow_networks").join(",") %> \
      -allowHostAccess=<%= p("garden.allow_host_access") %> \
      -debugAddr=<%= p("garden.debug_listen_address") %> \
      -rootfs=<%= p("garden.default_container_rootfs") %> \
      -containerGraceTime=<%= p("garden.default_container_grace_time") %> \
    <% if_p("garden.docker_registry_endpoint") do |endpoint| %> \
      -registry=<%= endpoint %> \
    <% end %> \
    <% if_p("garden.tag") do |tag| %> \
      -tag=<%= tag %> \
    <% end %> \
      1>>$LOG_DIR/garden.stdout.log \
      2>>$LOG_DIR/garden.stderr.log

    ;;

  stop)
    pid=$(cat $PIDFILE)

    for i in $(seq 30); do
      echo "sending TERM to ${pid}..."
      if kill $pid; then
        sleep 1
      else
        echo "exited"
        exit 0
      fi
    done

    echo "timed out; sending SIGQUIT followed by SIGKILL to ${pid}..."
    if kill -QUIT $pid; then
      sleep 5

      echo "killing ${pid}..."
      kill -9 $pid
    fi

    echo "killed"

    ;;

  *)
    echo "Usage: $0 {start|stop}"

    ;;

esac
